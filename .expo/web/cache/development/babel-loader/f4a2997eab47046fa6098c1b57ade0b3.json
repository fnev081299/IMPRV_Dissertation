{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nicolaseuliarte/Documents/Projects/imprv/components/main/bottomCamera.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { Camera } from \"expo-camera\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nvar _Camera$Constants = Camera.Constants,\n    CameraFlashModes = _Camera$Constants.FlashMode,\n    CameraTypes = _Camera$Constants.Type;\nexport default (function (_ref) {\n  var setType = _ref.setType,\n      _ref$cameraType = _ref.cameraType,\n      cameraType = _ref$cameraType === void 0 ? CameraTypes.back : _ref$cameraType,\n      _ref$flashMode = _ref.flashMode,\n      flashMode = _ref$flashMode === void 0 ? CameraFlashModes.off : _ref$flashMode,\n      pickImage = _ref.pickImage,\n      setCameraType = _ref.setCameraType,\n      takePicture = _ref.takePicture;\n  return React.createElement(View, {\n    style: styles.bottomToolbar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: _objectSpread({}, styles.alignCenter),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: pickImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"folder-multiple-image\",\n    color: \"white\",\n    size: 30,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: styles.alignCenter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: takePicture,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [styles.captureBtn, styles.captureBtnActive],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.captureBtnInternal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }\n  })))), React.createElement(View, {\n    style: styles.alignCenter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setType(cameraType === CameraTypes.back ? CameraTypes.front : CameraTypes.back);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"camera-party-mode\",\n    color: \"white\",\n    size: 30,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })))));\n});\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    winWidth = _Dimensions$get.width,\n    winHeight = _Dimensions$get.height;\n\nvar styles = StyleSheet.create({\n  camera: {\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  fixedRatio: {\n    height: winHeight,\n    width: winWidth,\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0\n  },\n  alignCenter: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  bottomToolbar: {\n    width: winWidth,\n    position: \"absolute\",\n    height: 100,\n    bottom: 0\n  },\n  captureBtn: {\n    width: 60,\n    height: 60,\n    borderWidth: 2,\n    borderRadius: 60,\n    borderColor: \"#FFFFFF\"\n  },\n  captureBtnActive: {\n    width: 80,\n    height: 80\n  },\n  captureBtnInternal: {\n    width: 76,\n    height: 76,\n    borderWidth: 2,\n    borderRadius: 76,\n    backgroundColor: \"red\",\n    borderColor: \"transparent\"\n  }\n});","map":{"version":3,"sources":["/Users/nicolaseuliarte/Documents/Projects/imprv/components/main/bottomCamera.js"],"names":["React","Camera","MaterialCommunityIcons","Constants","CameraFlashModes","FlashMode","CameraTypes","Type","setType","cameraType","back","flashMode","off","pickImage","setCameraType","takePicture","styles","bottomToolbar","flexDirection","alignCenter","captureBtn","captureBtnActive","captureBtnInternal","front","Dimensions","get","winWidth","width","winHeight","height","StyleSheet","create","camera","flex","fixedRatio","position","left","top","right","bottom","alignItems","justifyContent","borderWidth","borderRadius","borderColor","backgroundColor"],"mappings":";;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAOC,sBAAP;;;;;;wBAS2DD,MAAM,CAACE,S;IAA/CC,gB,qBAAXC,S;IAAmCC,W,qBAANC,I;AAErC,gBAAe;AAAA,MACXC,OADW,QACXA,OADW;AAAA,6BAEbC,UAFa;AAAA,MAEbA,UAFa,gCAEAH,WAAW,CAACI,IAFZ;AAAA,4BAGbC,SAHa;AAAA,MAGbA,SAHa,+BAGDP,gBAAgB,CAACQ,GAHhB;AAAA,MAIbC,SAJa,QAIbA,SAJa;AAAA,MAKbC,aALa,QAKbA,aALa;AAAA,MAMbC,WANa,QAMbA,WANa;AAAA,SAQb,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,oBAAOF,MAAM,CAACG,WAAd,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEN,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,sBAAD;AAAwB,IAAA,IAAI,EAAE,uBAA9B;AAAuD,IAAA,KAAK,EAAC,OAA7D;AAAqE,IAAA,IAAI,EAAE,EAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACG,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEJ,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACC,MAAM,CAACI,UAAR,EAAoBJ,MAAM,CAACK,gBAA3B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADF,CADF,CANF,EAaE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACG,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aACPX,OAAO,CACLC,UAAU,KAAKH,WAAW,CAACI,IAA3B,GACIJ,WAAW,CAACiB,KADhB,GAEIjB,WAAW,CAACI,IAHX,CADA;AAAA,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,sBAAD;AACE,IAAA,IAAI,EAAC,mBADP;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,IAAI,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CAbF,CADF,CARa;AAAA,CAAf;;sBA0C+Cc,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAhCC,Q,mBAAPC,K;IAAyBC,S,mBAARC,M;;AAEzB,IAAMb,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,EAAE,CADA;AAENf,IAAAA,aAAa,EAAE;AAFT,GADuB;AAK/BgB,EAAAA,UAAU,EAAE;AACVL,IAAAA,MAAM,EAAED,SADE;AAEVD,IAAAA,KAAK,EAAED,QAFG;AAGVS,IAAAA,QAAQ,EAAE,UAHA;AAIVC,IAAAA,IAAI,EAAE,CAJI;AAKVC,IAAAA,GAAG,EAAE,CALK;AAMVC,IAAAA,KAAK,EAAE,CANG;AAOVC,IAAAA,MAAM,EAAE;AAPE,GALmB;AAc/BpB,EAAAA,WAAW,EAAE;AACXc,IAAAA,IAAI,EAAE,CADK;AAEXO,IAAAA,UAAU,EAAE,QAFD;AAGXC,IAAAA,cAAc,EAAE;AAHL,GAdkB;AAmB/BxB,EAAAA,aAAa,EAAE;AACbU,IAAAA,KAAK,EAAED,QADM;AAEbS,IAAAA,QAAQ,EAAE,UAFG;AAGbN,IAAAA,MAAM,EAAE,GAHK;AAIbU,IAAAA,MAAM,EAAE;AAJK,GAnBgB;AAyB/BnB,EAAAA,UAAU,EAAE;AACVO,IAAAA,KAAK,EAAE,EADG;AAEVE,IAAAA,MAAM,EAAE,EAFE;AAGVa,IAAAA,WAAW,EAAE,CAHH;AAIVC,IAAAA,YAAY,EAAE,EAJJ;AAKVC,IAAAA,WAAW,EAAE;AALH,GAzBmB;AAgC/BvB,EAAAA,gBAAgB,EAAE;AAChBM,IAAAA,KAAK,EAAE,EADS;AAEhBE,IAAAA,MAAM,EAAE;AAFQ,GAhCa;AAoC/BP,EAAAA,kBAAkB,EAAE;AAClBK,IAAAA,KAAK,EAAE,EADW;AAElBE,IAAAA,MAAM,EAAE,EAFU;AAGlBa,IAAAA,WAAW,EAAE,CAHK;AAIlBC,IAAAA,YAAY,EAAE,EAJI;AAKlBE,IAAAA,eAAe,EAAE,KALC;AAMlBD,IAAAA,WAAW,EAAE;AANK;AApCW,CAAlB,CAAf","sourcesContent":["// bottom element of Camera\r\nimport React from \"react\";\r\nimport { Camera } from \"expo-camera\";\r\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\r\nimport {\r\n  View,\r\n  TouchableWithoutFeedback,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  StyleSheet,\r\n} from \"react-native\";\r\n\r\nconst { FlashMode: CameraFlashModes, Type: CameraTypes } = Camera.Constants;\r\n\r\nexport default ({\r\n    setType,\r\n  cameraType = CameraTypes.back,\r\n  flashMode = CameraFlashModes.off,\r\n  pickImage,\r\n  setCameraType,\r\n  takePicture,\r\n}) => (\r\n  <View style={styles.bottomToolbar}>\r\n    <View style={{ flexDirection: \"row\" }}>\r\n      <View style={{ ...styles.alignCenter }}>\r\n        <TouchableOpacity onPress={pickImage}>\r\n          <MaterialCommunityIcons name={\"folder-multiple-image\"} color=\"white\" size={30} />\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={styles.alignCenter}>\r\n        <TouchableWithoutFeedback onPress={takePicture}>\r\n          <View style={[styles.captureBtn, styles.captureBtnActive]}>\r\n            {<View style={styles.captureBtnInternal} />}\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n      </View>\r\n      <View style={styles.alignCenter}>\r\n        <TouchableOpacity\r\n          onPress={() =>\r\n            setType(\r\n              cameraType === CameraTypes.back\r\n                ? CameraTypes.front\r\n                : CameraTypes.back\r\n            )\r\n          }\r\n        >\r\n          <MaterialCommunityIcons\r\n            name=\"camera-party-mode\"\r\n            color=\"white\"\r\n            size={30}\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  </View>\r\n);\r\nconst { width: winWidth, height: winHeight } = Dimensions.get(\"window\");\r\n\r\nconst styles = StyleSheet.create({\r\n  camera: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n  },\r\n  fixedRatio: {\r\n    height: winHeight,\r\n    width: winWidth,\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n  },\r\n  alignCenter: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  bottomToolbar: {\r\n    width: winWidth,\r\n    position: \"absolute\",\r\n    height: 100,\r\n    bottom: 0,\r\n  },\r\n  captureBtn: {\r\n    width: 60,\r\n    height: 60,\r\n    borderWidth: 2,\r\n    borderRadius: 60,\r\n    borderColor: \"#FFFFFF\",\r\n  },\r\n  captureBtnActive: {\r\n    width: 80,\r\n    height: 80,\r\n  },\r\n  captureBtnInternal: {\r\n    width: 76,\r\n    height: 76,\r\n    borderWidth: 2,\r\n    borderRadius: 76,\r\n    backgroundColor: \"red\",\r\n    borderColor: \"transparent\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}