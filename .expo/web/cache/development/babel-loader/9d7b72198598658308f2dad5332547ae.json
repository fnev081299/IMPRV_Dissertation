{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/nicolaseuliarte/Documents/Projects/imprv/components/Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { createMaterialBottomTabNavigator } from \"@react-navigation/material-bottom-tabs\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nvar Tab = createMaterialBottomTabNavigator();\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchUser, fetchUserPosts, fetchUserFollowing, clearData } from \"../redux/actions/index\";\nimport FeedScreen from \"./main/Feed\";\nimport ModulesScreen from \"./main/Modules\";\nimport MessagingScreen from \"./main/Messaging\";\nimport ProfileScreen from \"./main/Profile\";\nimport SearchScreen from \"./main/Search\";\n\nvar EmptyScreen = function EmptyScreen() {\n  return null;\n};\n\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.clearData();\n      this.props.fetchUser();\n      this.props.fetchUserPosts();\n      this.props.fetchUserFollowing();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Tab.Navigator, {\n        barStyle: {\n          backgroundColor: \"#0A0A18\"\n        },\n        initialRouteName: \"Feed\",\n        labeled: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"home\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 15\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Search\",\n        component: SearchScreen,\n        navigation: this.props.navigation,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n                size = _ref2.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"magnify\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 15\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"AddContainer\",\n        component: EmptyScreen,\n        listeners: function listeners(_ref3) {\n          var navigation = _ref3.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Add\");\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n                size = _ref4.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"plus-box\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 15\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"portal\",\n        component: ModulesScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref5) {\n            var color = _ref5.color,\n                size = _ref5.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"book\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 15\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        listeners: function listeners(_ref6) {\n          var navigation = _ref6.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Profile\", {\n                uid: firebase.auth().currentUser.uid\n              });\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref7) {\n            var color = _ref7.color,\n                size = _ref7.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"account-circle\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 15\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser,\n    fetchUserPosts: fetchUserPosts,\n    fetchUserFollowing: fetchUserFollowing,\n    clearData: clearData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","map":{"version":3,"sources":["/Users/nicolaseuliarte/Documents/Projects/imprv/components/Main.js"],"names":["React","Component","createMaterialBottomTabNavigator","MaterialCommunityIcons","Tab","firebase","connect","bindActionCreators","fetchUser","fetchUserPosts","fetchUserFollowing","clearData","FeedScreen","ModulesScreen","MessagingScreen","ProfileScreen","SearchScreen","EmptyScreen","Main","props","backgroundColor","tabBarIcon","color","size","navigation","tabPress","event","preventDefault","navigate","uid","auth","currentUser","mapStateToProps","store","userState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { createMaterialBottomTabNavigator } from \"@react-navigation/material-bottom-tabs\";\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\n\n// application tabs\nconst Tab = createMaterialBottomTabNavigator();\n\n// firebase\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\n\n// redux\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport {\n  fetchUser,\n  fetchUserPosts,\n  fetchUserFollowing,\n  clearData,\n} from \"../redux/actions/index\";\n\n// screens\nimport FeedScreen from \"./main/Feed\";\nimport ModulesScreen from \"./main/Modules\";\nimport MessagingScreen from \"./main/Messaging\";\nimport ProfileScreen from \"./main/Profile\";\nimport SearchScreen from \"./main/Search\";\n\nconst EmptyScreen = () => {\n  return null;\n};\n\nexport class Main extends Component {\n  componentDidMount() {\n    // calling the fetchuser\n    this.props.clearData();\n    this.props.fetchUser();\n    this.props.fetchUserPosts();\n    this.props.fetchUserFollowing();\n  }\n  render() {\n    return (\n      <Tab.Navigator\n        barStyle={{ backgroundColor: \"#0A0A18\" }}\n        initialRouteName=\"Feed\"\n        labeled={false}\n      >\n        <Tab.Screen\n          name=\"Feed\"\n          component={FeedScreen}\n          options={{\n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons name=\"home\" color={color} size={26} />\n            ),\n          }}\n        />\n        <Tab.Screen\n          name=\"Search\"\n          component={SearchScreen}\n          navigation={this.props.navigation}\n          options={{\n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons name=\"magnify\" color={color} size={26} />\n            ),\n          }}\n        />\n        <Tab.Screen\n          name=\"AddContainer\"\n          component={EmptyScreen}\n          listeners={({ navigation }) => ({\n            tabPress: (event) => {\n              event.preventDefault();\n              navigation.navigate(\"Add\");\n            },\n          })}\n          options={{\n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons name=\"plus-box\" color={color} size={26} />\n            ),\n          }}\n        />\n        <Tab.Screen\n          name=\"portal\"\n          component={ModulesScreen}\n          options={{\n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons name=\"book\" color={color} size={26} />\n            ),\n          }}\n        />\n        <Tab.Screen\n          name=\"Profile\"\n          component={ProfileScreen}\n          listeners={({ navigation }) => ({\n            tabPress: (event) => {\n              event.preventDefault();\n              navigation.navigate(\"Profile\", {\n                uid: firebase.auth().currentUser.uid,\n              });\n            },\n          })}\n          options={{\n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons\n                name=\"account-circle\"\n                color={color}\n                size={26}\n              />\n            ),\n          }}\n        />\n      </Tab.Navigator>\n    );\n  }\n}\n\n// directed to user\nconst mapStateToProps = (store) => ({\n  currentUser: store.userState.currentUser,\n});\n\n// binding to redux functions\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      fetchUser,\n      fetchUserPosts,\n      fetchUserFollowing,\n      clearData,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n"]},"metadata":{},"sourceType":"module"}