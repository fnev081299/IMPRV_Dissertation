{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nicolaseuliarte/Documents/Projects/imprv/components/main/TeacherPortal.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as firebase from 'firebase';\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button } from 'react-native-paper';\nimport { connect } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nfunction Modules(props) {\n  var _this = this;\n\n  var user = props.user;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      Courses = _useState2[0],\n      setCourses = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedId = _useState4[0],\n      setSelectedId = _useState4[1];\n\n  console.log(props);\n  useEffect(function () {\n    var firestore = firebase.firestore();\n    var snapshot = firestore.collection('Courses');\n    snapshot.onSnapshot(function (querySnapshot) {\n      var narr = [];\n      var tempDoc = querySnapshot.docs.map(function (doc) {\n        return _objectSpread({\n          id: doc.id\n        }, doc.data());\n      });\n      console.log(props);\n      console.log(tempDoc);\n\n      if (props.user.Courses) {\n        props.user.Courses.map(function (item, i) {\n          var index = tempDoc.findIndex(function (item1) {\n            return item1.id == item;\n          });\n\n          if (index != -1) {\n            narr.push(tempDoc[index]);\n          }\n        });\n      }\n\n      setCourses(narr);\n    });\n  }, [user]);\n\n  var Item = function Item(_ref) {\n    var item = _ref.item,\n        onPress = _ref.onPress,\n        style = _ref.style;\n    return React.createElement(TouchableOpacity, {\n      onPress: onPress,\n      style: [styles.item, style],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, item.name));\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    var backgroundColor = item.id === selectedId ? \"#6e3b6e\" : \"#f9c2ff\";\n    return React.createElement(Item, {\n      item: item,\n      onPress: function onPress() {\n        props.navigation.navigate('CourseDetail', {\n          item: item\n        });\n        setSelectedId(item.id);\n      },\n      style: {\n        backgroundColor: '#dbd9d9'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.buttoncontainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    mode: \"contained\",\n    onPress: function onPress() {\n      props.navigation.navigate('createCourse');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Create Course\")), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: renderItem,\n    data: Courses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  buttoncontainer: {\n    padding: 10\n  },\n  item: {\n    padding: 10,\n    marginVertical: 8,\n    marginHorizontal: 16\n  },\n  title: {}\n});\n\nvar mapStateFromProps = function mapStateFromProps(store) {\n  return {\n    user: store.userState.currentUser\n  };\n};\n\nexport default connect(mapStateFromProps)(Modules);","map":{"version":3,"sources":["/Users/nicolaseuliarte/Documents/Projects/imprv/components/main/TeacherPortal.js"],"names":["firebase","React","Button","connect","useEffect","useState","Modules","props","user","Courses","setCourses","selectedId","setSelectedId","console","log","firestore","snapshot","collection","onSnapshot","querySnapshot","narr","tempDoc","docs","map","doc","id","data","item","i","index","findIndex","item1","push","Item","onPress","style","styles","title","name","renderItem","backgroundColor","navigation","navigate","buttoncontainer","StyleSheet","create","padding","marginVertical","marginHorizontal","mapStateFromProps","store","userState","currentUser"],"mappings":"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","sourcesContent":["import * as firebase from 'firebase';\r\nimport React from 'react'\r\nimport { FlatList, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport { Button } from 'react-native-paper';\r\nimport { connect } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nfunction Modules(props) {\r\n    const { user } = props\r\n    const [Courses, setCourses] = useState([])\r\n    const [selectedId, setSelectedId] = useState(null);\r\n    console.log(props)\r\n    useEffect(() => {\r\n        const firestore = firebase.firestore()\r\n        const snapshot = firestore.collection('Courses')\r\n        snapshot.onSnapshot((querySnapshot) => {\r\n\r\n            let narr = []\r\n            const tempDoc = querySnapshot.docs.map((doc) => {\r\n                return { id: doc.id, ...doc.data() }\r\n            })\r\n            console.log(props)\r\n            console.log(tempDoc)\r\n            if (props.user.Courses) {\r\n\r\n                props.user.Courses.map((item, i) => {\r\n                    let index = tempDoc.findIndex((item1) => {\r\n                        return item1.id == item\r\n                    })\r\n\r\n                    if (index != -1) {\r\n                        // console.log(tempDoc[index])\r\n                        narr.push(tempDoc[index])\r\n                        // setCourses(old => [...old, tempDoc[index]])\r\n\r\n                    }\r\n\r\n                })\r\n            }\r\n            setCourses(narr)\r\n        })\r\n\r\n    }, [user])\r\n    const Item = ({ item, onPress, style }) => (\r\n        <TouchableOpacity onPress={onPress} style={[styles.item, style]}>\r\n            <Text style={styles.title}>{item.name}</Text>\r\n        </TouchableOpacity>\r\n    );\r\n\r\n\r\n    const renderItem = ({ item }) => {\r\n        const backgroundColor = item.id === selectedId ? \"#6e3b6e\" : \"#f9c2ff\";\r\n\r\n        return (\r\n            <Item\r\n                item={item}\r\n                onPress={() => {\r\n                    props.navigation.navigate('CourseDetail', { item })\r\n\r\n\r\n                    setSelectedId(item.id)\r\n                }}\r\n                style={{ backgroundColor: '#dbd9d9' }}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <View style={styles.buttoncontainer}>\r\n            <View >\r\n                <Button mode='contained' onPress={() => { props.navigation.navigate('createCourse') }} >Create Course</Button>\r\n            </View>\r\n            <View>\r\n                <FlatList keyExtractor={item => item.id} renderItem={renderItem} data={Courses} />\r\n\r\n            </View>\r\n        </View>\r\n    )\r\n\r\n\r\n}\r\nlet styles = StyleSheet.create({\r\n    buttoncontainer: {\r\n\r\n        padding: 10\r\n    },\r\n    item: {\r\n        padding: 10,\r\n        marginVertical: 8,\r\n        marginHorizontal: 16,\r\n    },\r\n    title: {\r\n        // fontSize: 32,\r\n    },\r\n})\r\n\r\nconst mapStateFromProps = (store) => {\r\n    return {\r\n        user: store.userState.currentUser\r\n    }\r\n}\r\nexport default connect(mapStateFromProps)(Modules)\r\n"]},"metadata":{},"sourceType":"module"}