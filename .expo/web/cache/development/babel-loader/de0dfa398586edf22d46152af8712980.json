{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nicolaseuliarte/Documents/Projects/imprv/components/main/Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport { fetchUserPosts } from \"../../redux/actions\";\nexport default function Search(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var fetchUsers = function fetchUsers(search) {\n    firebase.firestore().collection(\"users\").where(\"name\", \">=\", search).get().then(function (snapshot) {\n      var users = snapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      setUsers(users);\n    });\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      margin: 20,\n      padding: 10,\n      fontSize: 17,\n      borderColor: \"grey\",\n      borderWidth: 1,\n      borderRadius: 20,\n      color: \"white\"\n    },\n    placeholder: \"Type Here...\",\n    onChangeText: function onChangeText(search) {\n      return fetchUsers(search);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: users,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Profile\", {\n            uid: item.id\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          marginHorizontal: 20,\n          marginVertical: 5,\n          padding: 20,\n          backgroundColor: \"#12151D\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }, item.name)));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/nicolaseuliarte/Documents/Projects/imprv/components/main/Search.js"],"names":["React","useState","firebase","fetchUserPosts","Search","props","users","setUsers","fetchUsers","search","firestore","collection","where","get","then","snapshot","docs","map","doc","data","id","margin","padding","fontSize","borderColor","borderWidth","borderRadius","color","item","navigation","navigate","uid","marginHorizontal","marginVertical","backgroundColor","name"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAYA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,oBAAP;AAEA,SAASC,cAAT;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAAA,kBAEVJ,QAAQ,CAAC,EAAD,CAFE;AAAA;AAAA,MAE7BK,KAF6B;AAAA,MAEtBC,QAFsB;;AAKpC,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAAY;AAC7BP,IAAAA,QAAQ,CACLQ,SADH,GAEGC,UAFH,CAEc,OAFd,EAGGC,KAHH,CAGS,MAHT,EAGiB,IAHjB,EAGuBH,MAHvB,EAIGI,GAJH,GAMGC,IANH,CAMQ,UAACC,QAAD,EAAc;AAClB,UAAIT,KAAK,GAAGS,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,UAACC,GAAD,EAAS;AACrC,YAAMC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAb;AACA,YAAMC,EAAE,GAAGF,GAAG,CAACE,EAAf;AACA;AAASA,UAAAA,EAAE,EAAFA;AAAT,WAAgBD,IAAhB;AACD,OAJW,CAAZ;AAKAZ,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAbH;AAcD,GAfD;;AAiBA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AACLe,MAAAA,MAAM,EAAE,EADH;AAELC,MAAAA,OAAO,EAAE,EAFJ;AAGLC,MAAAA,QAAQ,EAAE,EAHL;AAILC,MAAAA,WAAW,EAAE,MAJR;AAKLC,MAAAA,WAAW,EAAE,CALR;AAMLC,MAAAA,YAAY,EAAE,EANT;AAOLC,MAAAA,KAAK,EAAE;AAPF,KADT;AAUE,IAAA,WAAW,EAAC,cAVd;AAWE,IAAA,YAAY,EAAE,sBAAClB,MAAD;AAAA,aAAYD,UAAU,CAACC,MAAD,CAAtB;AAAA,KAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAeE,oBAAC,QAAD;AACE,IAAA,UAAU,EAAE,CADd;AAEE,IAAA,UAAU,EAAE,KAFd;AAGE,IAAA,IAAI,EAAEH,KAHR;AAIE,IAAA,UAAU,EAAE;AAAA,UAAGsB,IAAH,QAAGA,IAAH;AAAA,aACV,oBAAC,gBAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBACPvB,KAAK,CAACwB,UAAN,CAAiBC,QAAjB,CAA0B,SAA1B,EAAqC;AAAEC,YAAAA,GAAG,EAAEH,IAAI,CAACR;AAAZ,WAArC,CADO;AAAA,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLY,UAAAA,gBAAgB,EAAE,EADb;AAELC,UAAAA,cAAc,EAAE,CAFX;AAGLX,UAAAA,OAAO,EAAE,EAHJ;AAILY,UAAAA,eAAe,EAAE;AAJZ,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEP,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkCC,IAAI,CAACO,IAAvC,CARF,CALF,CADU;AAAA,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAyCD","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  FlatList,\n  TouchableOpacity,\n  Touchable,\n} from \"react-native\";\n\n// firebase\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\n\nimport { fetchUserPosts } from \"../../redux/actions\";\n\nexport default function Search(props) {\n  // hooks\n  const [users, setUsers] = useState([]);\n\n  // get the users\n  const fetchUsers = (search) => {\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .where(\"name\", \">=\", search)\n      .get()\n      //iterating through the docs to build the array of posts\n      .then((snapshot) => {\n        let users = snapshot.docs.map((doc) => {\n          const data = doc.data();\n          const id = doc.id;\n          return { id, ...data };\n        });\n        setUsers(users);\n      });\n  };\n\n  return (\n    <View>\n      <TextInput\n        style={{\n          margin: 20,\n          padding: 10,\n          fontSize: 17,\n          borderColor: \"grey\",\n          borderWidth: 1,\n          borderRadius: 20,\n          color: \"white\",\n        }}\n        placeholder=\"Type Here...\"\n        onChangeText={(search) => fetchUsers(search)}\n      />\n\n      <FlatList\n        numColumns={1}\n        horizontal={false}\n        data={users}\n        renderItem={({ item }) => (\n          <TouchableOpacity\n            onPress={() =>\n              props.navigation.navigate(\"Profile\", { uid: item.id })\n            }\n          >\n            <View\n              style={{\n                marginHorizontal: 20,\n                marginVertical: 5,\n                padding: 20,\n                backgroundColor: \"#12151D\",\n              }}\n            >\n              <Text style={{ color: \"white\" }}>{item.name}</Text>\n            </View>\n          </TouchableOpacity>\n        )}\n      />\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}