{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nicolaseuliarte/Documents/Projects/imprv/components/main/createQuestion.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as firebase from \"firebase\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, TextInput } from \"react-native-paper\";\nimport CreateOption from \"./CreateOption\";\nimport { firestoreAutoId } from \"./idgenerator\";\nexport default function CreateQuestion(props) {\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      Question = _useState2[0],\n      setQuestion = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      options = _useState4[0],\n      setoptions = _useState4[1];\n\n  var createQuestion = function createQuestion() {\n    var obj = {\n      Question: Question,\n      options: options,\n      id: firestoreAutoId()\n    };\n    firebase.firestore().collection(\"lessons\").doc(props.route.params.id).update({\n      Questions: firebase.firestore.FieldValue.arrayUnion(obj)\n    });\n    props.route.params.setQuests(obj);\n    props.navigation.goBack();\n  };\n\n  console.log(options);\n  return React.createElement(View, {\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Question\"), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      flex: 1\n    },\n    mode: \"outlined\",\n    onChangeText: function onChangeText(value) {\n      return setQuestion(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    style: {\n      margin: 5\n    },\n    mode: \"contained\",\n    onPress: function onPress() {\n      if (options.length != 0 && Question.length != 0) {\n        createQuestion();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"+Add\"))), React.createElement(View, {\n    style: {\n      paddingLeft: 10,\n      paddingRight: 10,\n      paddingTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, options.map(function (item, i) {\n    return React.createElement(CreateOption, {\n      correct: item.correct,\n      keys: i,\n      onDelete: function onDelete() {\n        var narray = options.slice();\n        narray.splice(i, 1);\n        setoptions(narray);\n      },\n      value: item,\n      onChange: function onChange(props) {\n        var narray = options.slice();\n        var newarray = [];\n\n        if (props.correct == true) {\n          narray.forEach(function (item) {\n            newarray.push(_objectSpread(_objectSpread({}, item), {}, {\n              correct: false\n            }));\n          });\n          narray = newarray;\n        }\n\n        narray.splice(i, 1, props);\n        setoptions(narray);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    });\n  })), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: function onPress() {\n      setoptions(function (old) {\n        return [].concat(_toConsumableArray(old), [{\n          value: \"\",\n          correct: false\n        }]);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"+ Option\"));\n}","map":{"version":3,"sources":["/Users/nicolaseuliarte/Documents/Projects/imprv/components/main/createQuestion.js"],"names":["firebase","React","useState","Button","TextInput","CreateOption","firestoreAutoId","CreateQuestion","props","Question","setQuestion","options","setoptions","createQuestion","obj","id","firestore","collection","doc","route","params","update","Questions","FieldValue","arrayUnion","setQuests","navigation","goBack","console","log","padding","flexDirection","alignItems","flex","value","margin","length","paddingLeft","paddingRight","paddingTop","map","item","i","correct","narray","slice","splice","newarray","forEach","push","old"],"mappings":"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","sourcesContent":["import * as firebase from \"firebase\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { Button, TextInput } from \"react-native-paper\";\r\nimport CreateOption from \"./CreateOption\";\r\nimport { firestoreAutoId } from \"./idgenerator\";\r\n\r\nexport default function CreateQuestion(props) {\r\n  const [Question, setQuestion] = useState(\"\");\r\n  const [options, setoptions] = useState([]);\r\n\r\n  const createQuestion = () => {\r\n    const obj = {\r\n      Question,\r\n      options,\r\n      id: firestoreAutoId(),\r\n    };\r\n    firebase\r\n      .firestore()\r\n      .collection(\"lessons\")\r\n      .doc(props.route.params.id)\r\n      .update({\r\n        Questions: firebase.firestore.FieldValue.arrayUnion(obj),\r\n      });\r\n    props.route.params.setQuests(obj);\r\n    props.navigation.goBack();\r\n  };\r\n  console.log(options);\r\n  return (\r\n    <View style={{ padding: 10 }}>\r\n      <View>\r\n        <Text>Question</Text>\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <TextInput\r\n            style={{ flex: 1 }}\r\n            mode={\"outlined\"}\r\n            onChangeText={(value) => setQuestion(value)}\r\n          />\r\n          <Button\r\n            style={{ margin: 5 }}\r\n            mode={\"contained\"}\r\n            onPress={() => {\r\n              if (options.length != 0 && Question.length != 0) {\r\n                createQuestion();\r\n              }\r\n            }}\r\n          >\r\n            +Add\r\n          </Button>\r\n        </View>\r\n      </View>\r\n      <View style={{ paddingLeft: 10, paddingRight: 10, paddingTop: 10 }}>\r\n        {options.map((item, i) => {\r\n          return (\r\n            <CreateOption\r\n              correct={item.correct}\r\n              keys={i}\r\n              onDelete={() => {\r\n                let narray = options.slice();\r\n                narray.splice(i, 1);\r\n                setoptions(narray);\r\n              }}\r\n              value={item}\r\n              onChange={(props) => {\r\n                let narray = options.slice();\r\n                let newarray = [];\r\n                if (props.correct == true) {\r\n                  narray.forEach((item) => {\r\n                    newarray.push({ ...item, correct: false });\r\n                  });\r\n                  narray = newarray;\r\n                }\r\n                narray.splice(i, 1, props);\r\n                setoptions(narray);\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </View>\r\n      <Button\r\n        mode=\"contained\"\r\n        onPress={() => {\r\n          setoptions((old) => [...old, { value: \"\", correct: false }]);\r\n        }}\r\n      >\r\n        + Option\r\n      </Button>\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}