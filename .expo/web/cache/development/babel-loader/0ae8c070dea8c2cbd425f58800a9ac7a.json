{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nicolaseuliarte/Documents/Projects/imprv/components/main/StudentPortal.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as firebase from \"firebase\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Card } from \"react-native-paper\";\nimport { connect } from \"react-redux\";\n\nfunction StudentPortal(props) {\n  var _this = this;\n\n  var user = props.user;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      Courses = _useState2[0],\n      setCourses = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      myCourses = _useState4[0],\n      setmyCourses = _useState4[1];\n\n  useEffect(function () {\n    var firestore = firebase.firestore();\n    var snapshot = firestore.collection(\"Courses\");\n    snapshot.onSnapshot(function (querySnapshot) {\n      var livearray = [];\n      var narr = [];\n      var tempDoc = querySnapshot.docs.map(function (doc) {\n        return _objectSpread({\n          id: doc.id\n        }, doc.data());\n      });\n      tempDoc.map(function (data) {\n        if (data.live) {\n          livearray.push(data);\n        }\n      });\n\n      if (props.user.Courses) {\n        props.user.Courses.map(function (item, i) {\n          var index = livearray.findIndex(function (item1) {\n            return item1.id == item.id;\n          });\n\n          if (index != -1) {\n            var iterat = livearray[index];\n            iterat = _objectSpread(_objectSpread({}, iterat), {}, {\n              userprogress: item.lessontaken\n            });\n            console.log(iterat);\n            narr.push(iterat);\n            livearray.splice(index, 1);\n          }\n        });\n      }\n\n      setCourses(livearray);\n      setmyCourses(narr);\n    });\n  }, [user]);\n\n  var Item = function Item(_ref) {\n    var item = _ref.item,\n        onPress = _ref.onPress,\n        style = _ref.style,\n        progress = _ref.progress;\n    return React.createElement(TouchableOpacity, {\n      onPress: onPress,\n      style: [styles.item, style],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, item.name), React.createElement(Text, {\n      style: {\n        alignSelf: \"flex-end\",\n        color: 'green',\n        fontWeight: 'bold'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, progress));\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    console.log(item);\n    var progress = \"\";\n\n    if (Array.isArray(item.userprogress) && Array.isArray(item.Lessons)) {\n      var value = item.userprogress.length / item.Lessons.length;\n\n      if (value == 1) {\n        progress = \"complete\";\n      } else {\n        progress = Math.floor(value * 100) + \"%\";\n      }\n    } else {\n      progress = \"0%\";\n    }\n\n    return React.createElement(Item, {\n      item: item,\n      progress: progress,\n      onPress: function onPress() {\n        props.navigation.navigate(\"CourseDetail\", {\n          item: item,\n          enrolled: true\n        });\n      },\n      style: {\n        backgroundColor: \"#dbd9d9\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, React.createElement(Card.Title, {\n    title: \"myCourses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: renderItem,\n    data: myCourses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"flex-end\",\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    mode: \"contained\",\n    onPress: function onPress() {\n      return props.navigation.navigate(\"allcourses\", {\n        Courses: Courses\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \"Explore Courses\")));\n}\n\nvar mapStateFromProps = function mapStateFromProps(store) {\n  return {\n    user: store.userState.currentUser\n  };\n};\n\nvar styles = StyleSheet.create({\n  buttoncontainer: {\n    padding: 10\n  },\n  item: {\n    padding: 10,\n    marginVertical: 5,\n    marginHorizontal: 16,\n    flexDirection: \"row\"\n  },\n  title: {\n    flex: 1\n  }\n});\nexport default connect(mapStateFromProps)(StudentPortal);","map":{"version":3,"sources":["/Users/nicolaseuliarte/Documents/Projects/imprv/components/main/StudentPortal.js"],"names":["firebase","React","useEffect","useState","Button","Card","connect","StudentPortal","props","user","Courses","setCourses","myCourses","setmyCourses","firestore","snapshot","collection","onSnapshot","querySnapshot","livearray","narr","tempDoc","docs","map","doc","id","data","live","push","item","i","index","findIndex","item1","iterat","userprogress","lessontaken","console","log","splice","Item","onPress","style","progress","styles","title","name","alignSelf","color","fontWeight","renderItem","Array","isArray","Lessons","value","length","Math","floor","navigation","navigate","enrolled","backgroundColor","padding","flexDirection","justifyContent","mapStateFromProps","store","userState","currentUser","StyleSheet","create","buttoncontainer","marginVertical","marginHorizontal","flex"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,QAAZ,MAA0B,UAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;;;AAQA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,oBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAAA,MACpBC,IADoB,GACXD,KADW,CACpBC,IADoB;;AAAA,kBAEEN,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,MAErBO,OAFqB;AAAA,MAEZC,UAFY;;AAAA,mBAGMR,QAAQ,CAAC,EAAD,CAHd;AAAA;AAAA,MAGrBS,SAHqB;AAAA,MAGVC,YAHU;;AAK5BX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMY,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AACA,QAAMC,QAAQ,GAAGD,SAAS,CAACE,UAAV,CAAqB,SAArB,CAAjB;AACAD,IAAAA,QAAQ,CAACE,UAAT,CAAoB,UAACC,aAAD,EAAmB;AACrC,UAAIC,SAAS,GAAG,EAAhB;AAEA,UAAIC,IAAI,GAAG,EAAX;AACA,UAAIC,OAAO,GAAGH,aAAa,CAACI,IAAd,CAAmBC,GAAnB,CAAuB,UAACC,GAAD,EAAS;AAC5C;AAASC,UAAAA,EAAE,EAAED,GAAG,CAACC;AAAjB,WAAwBD,GAAG,CAACE,IAAJ,EAAxB;AACD,OAFa,CAAd;AAIAL,MAAAA,OAAO,CAACE,GAAR,CAAY,UAACG,IAAD,EAAU;AACpB,YAAIA,IAAI,CAACC,IAAT,EAAe;AACbR,UAAAA,SAAS,CAACS,IAAV,CAAeF,IAAf;AACD;AACF,OAJD;;AAMA,UAAIlB,KAAK,CAACC,IAAN,CAAWC,OAAf,EAAwB;AACtBF,QAAAA,KAAK,CAACC,IAAN,CAAWC,OAAX,CAAmBa,GAAnB,CAAuB,UAACM,IAAD,EAAOC,CAAP,EAAa;AAClC,cAAIC,KAAK,GAAGZ,SAAS,CAACa,SAAV,CAAoB,UAACC,KAAD,EAAW;AACzC,mBAAOA,KAAK,CAACR,EAAN,IAAYI,IAAI,CAACJ,EAAxB;AACD,WAFW,CAAZ;;AAIA,cAAIM,KAAK,IAAI,CAAC,CAAd,EAAiB;AACf,gBAAIG,MAAM,GAAGf,SAAS,CAACY,KAAD,CAAtB;AAEAG,YAAAA,MAAM,mCAAQA,MAAR;AAAgBC,cAAAA,YAAY,EAAEN,IAAI,CAACO;AAAnC,cAAN;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACAd,YAAAA,IAAI,CAACQ,IAAL,CAAUM,MAAV;AACAf,YAAAA,SAAS,CAACoB,MAAV,CAAiBR,KAAjB,EAAwB,CAAxB;AAED;AACF,SAdD;AAeD;;AACDpB,MAAAA,UAAU,CAACQ,SAAD,CAAV;AACAN,MAAAA,YAAY,CAACO,IAAD,CAAZ;AACD,KAjCD;AAkCD,GArCQ,EAqCN,CAACX,IAAD,CArCM,CAAT;;AAuCA,MAAM+B,IAAI,GAAG,SAAPA,IAAO;AAAA,QAAGX,IAAH,QAAGA,IAAH;AAAA,QAASY,OAAT,QAASA,OAAT;AAAA,QAAkBC,KAAlB,QAAkBA,KAAlB;AAAA,QAAyBC,QAAzB,QAAyBA,QAAzB;AAAA,WACX,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAEF,OAA3B;AAAoC,MAAA,KAAK,EAAE,CAACG,MAAM,CAACf,IAAR,EAAca,KAAd,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEE,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BhB,IAAI,CAACiB,IAAjC,CADF,EAEE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE,UAAb;AAAwBC,QAAAA,KAAK,EAAC,OAA9B;AAAsCC,QAAAA,UAAU,EAAC;AAAjD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyEN,QAAzE,CAFF,CADW;AAAA,GAAb;;AAOA,MAAMO,UAAU,GAAG,SAAbA,UAAa,QAAc;AAAA,QAAXrB,IAAW,SAAXA,IAAW;AAC/BQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACA,QAAIc,QAAQ,GAAG,EAAf;;AACA,QAAIQ,KAAK,CAACC,OAAN,CAAcvB,IAAI,CAACM,YAAnB,KAAoCgB,KAAK,CAACC,OAAN,CAAcvB,IAAI,CAACwB,OAAnB,CAAxC,EAAqE;AACnE,UAAIC,KAAK,GAAGzB,IAAI,CAACM,YAAL,CAAkBoB,MAAlB,GAA2B1B,IAAI,CAACwB,OAAL,CAAaE,MAApD;;AACA,UAAID,KAAK,IAAI,CAAb,EAAgB;AACdX,QAAAA,QAAQ,GAAG,UAAX;AACD,OAFD,MAEO;AACLA,QAAAA,QAAQ,GAAGa,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAG,GAAnB,IAA0B,GAArC;AACD;AACF,KAPD,MAOO;AACLX,MAAAA,QAAQ,GAAG,IAAX;AACD;;AACD,WACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEd,IADR;AAEE,MAAA,QAAQ,EAAEc,QAFZ;AAGE,MAAA,OAAO,EAAE,mBAAM;AACbnC,QAAAA,KAAK,CAACkD,UAAN,CAAiBC,QAAjB,CAA0B,cAA1B,EAA0C;AAAE9B,UAAAA,IAAI,EAAJA,IAAF;AAAQ+B,UAAAA,QAAQ,EAAE;AAAlB,SAA1C;AACD,OALH;AAME,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD,GAvBD;;AAyBA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAE,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AACE,IAAA,YAAY,EAAE,sBAACjC,IAAD;AAAA,aAAUA,IAAI,CAACJ,EAAf;AAAA,KADhB;AAEE,IAAA,UAAU,EAAEyB,UAFd;AAGE,IAAA,IAAI,EAAEtC,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,EAWE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLmD,MAAAA,aAAa,EAAE,KADV;AAELC,MAAAA,cAAc,EAAE,UAFX;AAGLF,MAAAA,OAAO,EAAE;AAHJ,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMtD,KAAK,CAACkD,UAAN,CAAiBC,QAAjB,CAA0B,YAA1B,EAAwC;AAAEjD,QAAAA,OAAO,EAAPA;AAAF,OAAxC,CAAN;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPF,CAXF,CADF;AA4BD;;AACD,IAAMuD,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACnC,SAAO;AACLzD,IAAAA,IAAI,EAAEyD,KAAK,CAACC,SAAN,CAAgBC;AADjB,GAAP;AAGD,CAJD;;AAKA,IAAIxB,MAAM,GAAGyB,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,eAAe,EAAE;AACfT,IAAAA,OAAO,EAAE;AADM,GADY;AAI7BjC,EAAAA,IAAI,EAAE;AACJiC,IAAAA,OAAO,EAAE,EADL;AAEJU,IAAAA,cAAc,EAAE,CAFZ;AAGJC,IAAAA,gBAAgB,EAAE,EAHd;AAIJV,IAAAA,aAAa,EAAE;AAJX,GAJuB;AAU7BlB,EAAAA,KAAK,EAAE;AAEL6B,IAAAA,IAAI,EAAE;AAFD;AAVsB,CAAlB,CAAb;AAeA,eAAepE,OAAO,CAAC2D,iBAAD,CAAP,CAA2B1D,aAA3B,CAAf","sourcesContent":["import * as firebase from \"firebase\";\r\nimport React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  FlatList,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\nimport { Button, Card } from \"react-native-paper\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction StudentPortal(props) {\r\n  const { user } = props;\r\n  const [Courses, setCourses] = useState([]);\r\n  const [myCourses, setmyCourses] = useState([]);\r\n  // all the courses from firebase\r\n  useEffect(() => {\r\n    const firestore = firebase.firestore();\r\n    const snapshot = firestore.collection(\"Courses\");\r\n    snapshot.onSnapshot((querySnapshot) => {\r\n      let livearray = [];\r\n\r\n      let narr = [];\r\n      let tempDoc = querySnapshot.docs.map((doc) => {\r\n        return { id: doc.id, ...doc.data() };\r\n      });\r\n\r\n      tempDoc.map((data) => {\r\n        if (data.live) {\r\n          livearray.push(data);\r\n        }\r\n      });\r\n\r\n      if (props.user.Courses) {\r\n        props.user.Courses.map((item, i) => {\r\n          let index = livearray.findIndex((item1) => {\r\n            return item1.id == item.id;\r\n          });\r\n\r\n          if (index != -1) {\r\n            let iterat = livearray[index];\r\n            // attaching userprogress along with Course object\r\n            iterat = { ...iterat, userprogress: item.lessontaken };\r\n            console.log(iterat);\r\n            narr.push(iterat);\r\n            livearray.splice(index, 1);\r\n            // setCourses(old => [...old, tempDoc[index]])\r\n          }\r\n        });\r\n      }\r\n      setCourses(livearray);\r\n      setmyCourses(narr);\r\n    });\r\n  }, [user]);\r\n\r\n  const Item = ({ item, onPress, style, progress }) => (\r\n    <TouchableOpacity onPress={onPress} style={[styles.item, style]}>\r\n      <Text style={styles.title}>{item.name}</Text>\r\n      <Text style={{ alignSelf: \"flex-end\",color:'green',fontWeight:'bold' }}>{progress}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  const renderItem = ({ item }) => {\r\n    console.log(item);\r\n    let progress = \"\";\r\n    if (Array.isArray(item.userprogress) && Array.isArray(item.Lessons)) {\r\n      let value = item.userprogress.length / item.Lessons.length;\r\n      if (value == 1) {\r\n        progress = \"complete\";\r\n      } else {\r\n        progress = Math.floor(value * 100) + \"%\";\r\n      }\r\n    } else {\r\n      progress = \"0%\";\r\n    }\r\n    return (\r\n      <Item\r\n        item={item}\r\n        progress={progress}\r\n        onPress={() => {\r\n          props.navigation.navigate(\"CourseDetail\", { item, enrolled: true });\r\n        }}\r\n        style={{ backgroundColor: \"#dbd9d9\" }}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={{ padding: 10 }}>\r\n      <View>\r\n        <Card>\r\n          <Card.Title title={\"myCourses\"} />\r\n          <FlatList\r\n            keyExtractor={(item) => item.id}\r\n            renderItem={renderItem}\r\n            data={myCourses}\r\n          />\r\n        </Card>\r\n      </View>\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          justifyContent: \"flex-end\",\r\n          padding: 10,\r\n        }}\r\n      >\r\n        <Button\r\n          mode=\"contained\"\r\n          onPress={() => props.navigation.navigate(\"allcourses\", { Courses })}\r\n        >\r\n          Explore Courses\r\n        </Button>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\nconst mapStateFromProps = (store) => {\r\n  return {\r\n    user: store.userState.currentUser,\r\n  };\r\n};\r\nlet styles = StyleSheet.create({\r\n  buttoncontainer: {\r\n    padding: 10,\r\n  },\r\n  item: {\r\n    padding: 10,\r\n    marginVertical: 5,\r\n    marginHorizontal: 16,\r\n    flexDirection: \"row\",\r\n  },\r\n  title: {\r\n    // fontSize: 32,\r\n    flex: 1,\r\n  },\r\n});\r\nexport default connect(mapStateFromProps)(StudentPortal);\r\n"]},"metadata":{},"sourceType":"module"}