{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nicolaseuliarte/Documents/Projects/imprv/components/main/QuizPanel.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as firebase from \"firebase\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Button, RadioButton, Snackbar, Dialog } from \"react-native-paper\";\nimport { useSelector } from \"react-redux\";\nvar initvalue = {\n  correct: false,\n  value: \"\"\n};\nexport default function QuizPanel(props) {\n  var _this = this;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      snackbar = _React$useState2[0],\n      setsnackbar = _React$useState2[1];\n\n  var Questions = props.route.params.Questions;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      index = _useState2[0],\n      setindex = _useState2[1];\n\n  var _Questions$index = Questions[index],\n      Question = _Questions$index.Question,\n      options = _Questions$index.options;\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      result = _useState4[0],\n      setresult = _useState4[1];\n\n  var _useState5 = useState(initvalue),\n      _useState6 = _slicedToArray(_useState5, 2),\n      Answer = _useState6[0],\n      setAnswer = _useState6[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      visible = _React$useState4[0],\n      setVisible = _React$useState4[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      Totalmarks = _useState8[0],\n      setTotalmarks = _useState8[1];\n\n  var currentUser = useSelector(function (store) {\n    return store.userState.currentUser;\n  });\n\n  var showresult = function showresult() {\n    if (Answer.value.length == 0) {\n      ShowSnake();\n      return;\n    }\n\n    var list = [].concat(_toConsumableArray(result), [{\n      Question: Question,\n      Answer: Answer\n    }]);\n    setresult(function (old) {\n      return [].concat(_toConsumableArray(old), [{\n        Question: Question,\n        Answer: Answer\n      }]);\n    });\n    setAnswer(initvalue);\n    var marks = 0;\n    list.map(function (item, i) {\n      if (item.Answer.correct) {\n        marks = marks + 1;\n      }\n    });\n    var totalmarks = 100 * (marks / Questions.length);\n    setTotalmarks(totalmarks);\n    updateUser(totalmarks);\n    setVisible(true);\n  };\n\n  var updateUser = function updateUser(totalmarks) {\n    var _props$route$params = props.route.params,\n        id = _props$route$params.id,\n        courseid = _props$route$params.courseid;\n    var obj = {\n      id: id,\n      marks: totalmarks\n    };\n    console.log(currentUser, courseid, id);\n    var Courses = currentUser.Courses;\n    var index = Courses.findIndex(function (item, i) {\n      return item.id == courseid;\n    });\n\n    if (index != -1) {\n      var currentcourse = Courses[index];\n\n      if (currentcourse.lessontaken && currentcourse.lessontaken.length !== 0) {\n        console.log(\"this is running \");\n        var lessontaken = currentcourse.lessontaken;\n        console.log(lessontaken);\n        console.log(id);\n        var lessonindex = lessontaken.findIndex(function (data) {\n          return data.id == id;\n        });\n        console.log(lessonindex);\n\n        if (lessonindex != -1) {\n          console.log(\"run1\");\n          lessontaken.splice(lessonindex, 1, obj);\n        } else {\n          console.log(\"run2\");\n          lessontaken.push(obj);\n        }\n\n        currentcourse = _objectSpread(_objectSpread({}, currentcourse), {}, {\n          lessontaken: lessontaken\n        });\n      } else {\n        console.log(\"oh no this one\");\n        currentcourse = _objectSpread(_objectSpread({}, currentcourse), {}, {\n          lessontaken: [obj]\n        });\n      }\n\n      Courses.splice(index, 1, currentcourse);\n    }\n\n    firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).update({\n      Courses: Courses\n    });\n  };\n\n  var hideDialog = function hideDialog() {\n    setVisible(false);\n    props.navigation.navigate(\"Main\");\n  };\n\n  var Options = function Options(_ref) {\n    var item = _ref.item,\n        i = _ref.i;\n    return React.createElement(TouchableOpacity, {\n      key: i,\n      onPress: function onPress() {\n        return setAnswer(item);\n      },\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, React.createElement(RadioButton, {\n      onPress: function onPress() {\n        return setAnswer(item);\n      },\n      status: Answer.value == item.value ? \"checked\" : \"unchecked\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, item.value));\n  };\n\n  var callconfirm = function callconfirm() {\n    if (Answer.value.length == 0) {\n      ShowSnake();\n      return;\n    }\n\n    setresult(function (old) {\n      return [].concat(_toConsumableArray(old), [{\n        Question: Question,\n        Answer: Answer\n      }]);\n    });\n    setAnswer(initvalue);\n    setindex(index + 1);\n  };\n\n  var ShowSnake = function ShowSnake() {\n    setsnackbar(true);\n    setTimeout(function () {\n      setsnackbar(false);\n    }, 3000);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\",\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Question no: \" + (index + 1) + \" \", Question)), React.createElement(View, {\n    style: {\n      borderRadius: 10,\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, options.map(function (item, i) {\n    return React.createElement(Options, {\n      i: i,\n      key: i,\n      item: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 20\n      }\n    });\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, index !== Questions.length - 1 ? React.createElement(Button, {\n    mode: \"contained\",\n    onPress: callconfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \"Confirm & Next\", \" \") : React.createElement(Button, {\n    onPress: showresult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"Confirm & End \"))), React.createElement(Snackbar, {\n    visible: snackbar,\n    style: styles.snackbaralert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, \"Select an Option First\"), React.createElement(Dialog, {\n    visible: visible,\n    onDismiss: hideDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, React.createElement(Dialog.ScrollArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: {\n      paddingHorizontal: 24,\n      paddingVertical: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, \"You have got \", Totalmarks, \"%\")))));\n}\nvar styles = StyleSheet.create({\n  buttonContainer: {\n    margin: 20,\n    flexDirection: \"row\"\n  },\n  snackbaralert: {\n    backgroundColor: \"red\"\n  }\n});","map":{"version":3,"sources":["/Users/nicolaseuliarte/Documents/Projects/imprv/components/main/QuizPanel.js"],"names":["firebase","React","useState","Button","RadioButton","Snackbar","Dialog","useSelector","initvalue","correct","value","QuizPanel","props","snackbar","setsnackbar","Questions","route","params","index","setindex","Question","options","result","setresult","Answer","setAnswer","visible","setVisible","Totalmarks","setTotalmarks","currentUser","store","userState","showresult","length","ShowSnake","list","old","marks","map","item","i","totalmarks","updateUser","id","courseid","obj","console","log","Courses","findIndex","currentcourse","lessontaken","lessonindex","data","splice","push","firestore","collection","doc","auth","uid","update","hideDialog","navigation","navigate","Options","flexDirection","alignItems","callconfirm","setTimeout","flex","padding","color","borderRadius","backgroundColor","styles","buttonContainer","snackbaralert","paddingHorizontal","paddingVertical","StyleSheet","create","margin"],"mappings":"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","sourcesContent":["import * as firebase from \"firebase\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Button, RadioButton, Snackbar, Dialog } from \"react-native-paper\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst initvalue = { correct: false, value: \"\" };\r\n\r\nexport default function QuizPanel(props) {\r\n  const [snackbar, setsnackbar] = React.useState(false);\r\n  const { Questions } = props.route.params;\r\n  const [index, setindex] = useState(0);\r\n  const { Question, options } = Questions[index];\r\n  const [result, setresult] = useState([]);\r\n  const [Answer, setAnswer] = useState(initvalue);\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [Totalmarks, setTotalmarks] = useState(0);\r\n  const currentUser = useSelector((store) => store.userState.currentUser);\r\n  const showresult = () => {\r\n    if (Answer.value.length == 0) {\r\n      ShowSnake();\r\n\r\n      return;\r\n    }\r\n    const list = [...result, { Question, Answer }];\r\n    setresult((old) => [...old, { Question, Answer }]);\r\n    setAnswer(initvalue);\r\n    let marks = 0;\r\n    list.map((item, i) => {\r\n      if (item.Answer.correct) {\r\n        marks = marks + 1;\r\n      }\r\n    });\r\n\r\n    let totalmarks = 100 * (marks / Questions.length);\r\n    setTotalmarks(totalmarks);\r\n    updateUser(totalmarks);\r\n    setVisible(true);\r\n  };\r\n  const updateUser = (totalmarks) => {\r\n    const { id, courseid } = props.route.params;\r\n    let obj = { id: id, marks: totalmarks };\r\n    console.log(currentUser, courseid, id);\r\n    let Courses = currentUser.Courses;\r\n    let index = Courses.findIndex((item, i) => {\r\n      return item.id == courseid;\r\n    });\r\n\r\n    if (index != -1) {\r\n      let currentcourse = Courses[index];\r\n      if (currentcourse.lessontaken && currentcourse.lessontaken.length !== 0) {\r\n        console.log(\"this is running \");\r\n        let lessontaken = currentcourse.lessontaken;\r\n        console.log(lessontaken);\r\n        console.log(id);\r\n        let lessonindex = lessontaken.findIndex((data) => {\r\n          return data.id == id;\r\n        });\r\n        console.log(lessonindex);\r\n        if (lessonindex != -1) {\r\n          console.log(\"run1\");\r\n          lessontaken.splice(lessonindex, 1, obj);\r\n        } else {\r\n          console.log(\"run2\");\r\n\r\n          lessontaken.push(obj);\r\n        }\r\n        currentcourse = { ...currentcourse, lessontaken };\r\n      } else {\r\n        console.log(\"oh no this one\");\r\n        currentcourse = {\r\n          ...currentcourse,\r\n          lessontaken: [obj],\r\n        };\r\n      }\r\n      Courses.splice(index, 1, currentcourse);\r\n    }\r\n\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .doc(firebase.auth().currentUser.uid)\r\n      .update({\r\n        Courses: Courses,\r\n      });\r\n  };\r\n  const hideDialog = () => {\r\n    setVisible(false);\r\n    props.navigation.navigate(\"Main\");\r\n  };\r\n  const Options = ({ item, i }) => {\r\n    return (\r\n      <TouchableOpacity\r\n        key={i}\r\n        onPress={() => setAnswer(item)}\r\n        style={{ flexDirection: \"row\", alignItems: \"center\" }}\r\n      >\r\n        <RadioButton\r\n          onPress={() => setAnswer(item)}\r\n          status={Answer.value == item.value ? \"checked\" : \"unchecked\"}\r\n        />\r\n        <Text>{item.value}</Text>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n  const callconfirm = () => {\r\n    if (Answer.value.length == 0) {\r\n      ShowSnake();\r\n\r\n      return;\r\n    }\r\n    setresult((old) => [...old, { Question, Answer }]);\r\n    setAnswer(initvalue);\r\n    setindex(index + 1);\r\n  };\r\n  const ShowSnake = () => {\r\n    setsnackbar(true);\r\n    setTimeout(() => {\r\n      setsnackbar(false);\r\n    }, 3000);\r\n  };\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <View style={{ padding: 10 }}>\r\n        <View>\r\n          <Text style={{ color: \"white\", padding: 10}}>\r\n            {`Question no: ${index + 1} `}\r\n            {Question}\r\n          </Text>\r\n        </View>\r\n        <View style={{ borderRadius: 10, backgroundColor: \"white\" }}>\r\n          {options.map((item, i) => {\r\n            return <Options i={i} key={i} item={item} />;\r\n          })}\r\n        </View>\r\n        <View style={styles.buttonContainer}> \r\n          {index !== Questions.length - 1 ? (\r\n            <Button mode={\"contained\"} onPress={callconfirm}>\r\n              Confirm & Next{\" \"}\r\n            </Button>\r\n          ) : (\r\n            <Button onPress={showresult}>Confirm & End </Button>\r\n          )}\r\n        </View>\r\n      </View>\r\n      <Snackbar visible={snackbar} style={styles.snackbaralert}>\r\n        Select an Option First\r\n      </Snackbar>\r\n      <Dialog visible={visible} onDismiss={hideDialog}>\r\n        <Dialog.ScrollArea>\r\n          <ScrollView\r\n            contentContainerStyle={{\r\n              paddingHorizontal: 24,\r\n              paddingVertical: 100,\r\n            }}\r\n          >\r\n            <Text>You have got {Totalmarks}%</Text>\r\n          </ScrollView>\r\n        </Dialog.ScrollArea>\r\n      </Dialog>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    margin: 20,\r\n    flexDirection: \"row\",\r\n  },\r\n  snackbaralert: {\r\n    backgroundColor: \"red\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}