{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nicolaseuliarte/Documents/Projects/imprv/components/main/CreateCourse.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Button, TextInput } from 'react-native-paper';\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nexport var firestoreAutoId = function firestoreAutoId() {\n  var CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var autoId = '';\n\n  for (var i = 0; i < 20; i++) {\n    autoId += CHARS.charAt(Math.floor(Math.random() * CHARS.length));\n  }\n\n  return autoId;\n};\n\nfunction CreateCourse(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setname = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Description = _useState4[0],\n      setDescription = _useState4[1];\n\n  console.log(props);\n\n  var createCourse = function createCourse() {\n    var autoid = firestoreAutoId();\n    firebase.firestore().collection('Courses').doc(autoid).set({\n      name: name,\n      Description: Description,\n      live: false,\n      id: autoid\n    }).then(function () {\n      firebase.firestore().collection('users').doc(firebase.auth().currentUser.uid).update({\n        Courses: firebase.firestore.FieldValue.arrayUnion(autoid)\n      });\n      console.log('Course Created Successfully');\n      props.navigation.goBack();\n    }).catch(function (error) {\n      console.error(\"Error adding document: \", error);\n    });\n  };\n\n  console.log(props);\n  return React.createElement(View, {\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      height: 36,\n      padding: 10,\n      margin: 18,\n      fontSize: 18,\n      borderWidth: 1,\n      borderRadius: 10,\n      backgroundColor: 'white'\n    },\n    placeholder: \"Course Name\",\n    onChangeText: function onChangeText(value) {\n      setname(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      height: 36,\n      padding: 10,\n      margin: 18,\n      fontSize: 18,\n      borderWidth: 1,\n      borderRadius: 10,\n      backgroundColor: 'white'\n    },\n    placeholder: \"Course Description\",\n    onChangeText: function onChangeText(value) {\n      setDescription(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    style: {\n      margin: 10\n    },\n    onPress: function onPress() {\n      createCourse();\n    },\n    mode: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Create Course\")));\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nexport default connect(mapStateToProps)(CreateCourse);","map":{"version":3,"sources":["/Users/nicolaseuliarte/Documents/Projects/imprv/components/main/CreateCourse.js"],"names":["React","useState","Button","TextInput","connect","firebase","firestoreAutoId","CHARS","autoId","i","charAt","Math","floor","random","length","CreateCourse","props","name","setname","Description","setDescription","console","log","createCourse","autoid","firestore","collection","doc","set","live","id","then","auth","currentUser","uid","update","Courses","FieldValue","arrayUnion","navigation","goBack","catch","error","padding","height","margin","fontSize","borderWidth","borderRadius","backgroundColor","value","mapStateToProps","store","userState"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport { View, Text } from 'react-native';\r\n// import DocumentPicker from 'react-native-document-picker';\r\nimport { Button, TextInput } from 'react-native-paper';\r\nimport { connect } from 'react-redux';\r\nimport firebase from 'firebase'\r\nimport 'firebase/firestore';\r\nexport const firestoreAutoId = () => {\r\n    const CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n\r\n    let autoId = ''\r\n\r\n    for (let i = 0; i < 20; i++) {\r\n        autoId += CHARS.charAt(\r\n            Math.floor(Math.random() * CHARS.length)\r\n        )\r\n    }\r\n    return autoId\r\n}\r\nfunction CreateCourse(props) {\r\n    const [name, setname] = useState('')\r\n    const [Description, setDescription] = useState('')\r\n// creating course in firebase \r\n    console.log(props)\r\n    const createCourse = () => {\r\n        const autoid = firestoreAutoId()\r\n        firebase.firestore().collection('Courses').doc(autoid).set({\r\n            name: name,\r\n            Description: Description,\r\n            live: false,\r\n            id: autoid\r\n        })\r\n            .then(function () {\r\n                firebase.firestore().collection('users').doc(firebase.auth().currentUser.uid).update({\r\n                    Courses: firebase.firestore.FieldValue.arrayUnion(autoid),\r\n                })\r\n                console.log('Course Created Successfully')\r\n\r\n                props.navigation.goBack()\r\n            })\r\n            .catch(function (error) {\r\n                console.error(\"Error adding document: \", error);\r\n            })\r\n    }\r\n    console.log(props)\r\n    return (\r\n        <View style={{ padding: 10 }}>\r\n            <TextInput\r\n                style={{\r\n                height: 36,\r\n                padding: 10,\r\n                margin: 18,\r\n                fontSize: 18,\r\n                borderWidth: 1,\r\n                borderRadius: 10,\r\n                backgroundColor: 'white',\r\n                }}\r\n                placeholder=\"Course Name\"\r\n                onChangeText={(value) => { setname(value) }}\r\n                />\r\n            <TextInput\r\n                style={{\r\n                height: 36,\r\n                padding: 10,\r\n                margin: 18,\r\n                fontSize: 18,\r\n                borderWidth: 1,\r\n                borderRadius: 10,\r\n                backgroundColor: 'white',\r\n                }}\r\n                placeholder=\"Course Description\"\r\n                onChangeText={(value) => { setDescription(value) }}\r\n                />\r\n            <View>\r\n                <Button style={{ margin: 10 }} onPress={() => { createCourse() }} mode='contained' >Create Course</Button>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\nconst mapStateToProps = (store) => ({\r\n    currentUser: store.userState.currentUser,\r\n\r\n\r\n\r\n})\r\nexport default connect(mapStateToProps)(CreateCourse)"]},"metadata":{},"sourceType":"module"}